# .github/workflows/deploy.yml
name: Generate Manifest and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'samples/**/*.wav'
      - 'scripts/generate-manifest.js'
      - 'index.js'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid errors when package-lock.json doesn't exist

      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            echo "Found package-lock.json, using npm ci for faster installation"
            npm ci
          else
            echo "No package-lock.json found, running npm install to create it"
            npm install
            echo "package-lock.json has been created"
          fi

      - name: Generate manifest
        run: npm run generate
        env:
          GITHUB_PAGES_URL: https://casa24records.github.io/Drum-Machine-PRO

      - name: Commit manifest if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add manifest.json
          # Also add package-lock.json if it was just created
          if [ -f "package-lock.json" ] && ! git ls-files --error-unmatch package-lock.json > /dev/null 2>&1; then
            echo "Adding newly created package-lock.json to repository"
            git add package-lock.json
          fi
          git diff --staged --quiet || git commit -m "Auto-generate manifest.json [skip ci]"
          git push

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Build demo site
        run: |
          mkdir -p _site
          cp -r samples _site/
          cp manifest.json _site/
          cp index.js _site/
          if [ -f "demos/index.html" ]; then
            cp demos/index.html _site/
          fi
          echo "<!DOCTYPE html><html><head><title>Drum Machine PRO</title></head><body><h1>Drum Machine PRO Soundkit Library</h1><p>View the <a href='demos/index.html'>Demo</a></p></body></html>" > _site/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
